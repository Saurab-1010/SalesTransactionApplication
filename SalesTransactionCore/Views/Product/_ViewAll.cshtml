@using SalesTransaction.Model
@*@using SalesTransactionCore.ViewModel*@
@model IEnumerable<Product>


<button id="btnUpload" class="btn btn-demo" style="background: #5E72E4; color: white;" onclick=importProductFromExcel()>Import Excel</button>
<input type="file" id="pExcel" name="file" accept=".xls,.xlsx"/><br /><br />
@*<button id="btnDownload" class="btn btn-demo" style="background: #5E72E4; color: white;" onclick=exportProductToExcel()>Export Excel</button>*@
<button onclick="ExportToExcel('xlsx')" class="btn btn-demo" style="background: #5E72E4; color: white;">Export Excel</button>



<table class="table" id="tbl_exporttable_to_xls">
 @*   <input type="hidden" asp-for="ProductId" id="ProductId" />*@
    <thead>
        
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rate)
            </th>
              <th>
                @Html.DisplayNameFor(model => model.AvailableStock)
            </th>
            <th>
                 <a onclick="showInPopup('@Url.Action("AddOrEdit","Product", null, Context.Request.Scheme)','New Product')" class="btn btn-success text-white"><i class="fas fa-random"></i>Create New Product</a>
                     
             </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rate)
            </td>
                 <td>
                @Html.DisplayFor(modelItem => item.AvailableStock)
            </td>
      
            <td>
                <div>
                <a onclick="showInPopup('@Url.Action("AddOrEdit", "Product", new {id=item.ProductId}, Context.Request.Scheme)','Update Product')" class="btn btn-info text-white"><i class="fas fa-pencil-alt"></i> Edit</a>
                <form asp-action="Delete" asp-route-id="@item.ProductId" onsubmit="return jQueryAjaxDelete(this)" class="d-inline">
                    <input type="submit" value="Delete" class="btn btn-danger" />
                </form> 
               </div>
               
            </td>
        </tr>
}
    </tbody>
</table>

<script type="text/javascript" src="https://unpkg.com/xlsx@0.15.1/dist/xlsx.full.min.js"></script>

<script>
function importProductFromExcel(){
    if(document.getElementById("pExcel").files.length == 0)
    {
        alert("Upload your file first");
        return false;
    }
    
    var formData = new FormData();
    formData.append("file", $("#pExcel")[0].files[0]);
    //formData.append("productName", 'Id');
    $.ajax({
        type: 'POST',
        url: '@Url.Action("ImportExcel", "Product")',
        data: formData,
        processData: false, 
        contentType: false
    })
}

function ExportToExcel(type, fn, dl) {
       var elt = document.getElementById('tbl_exporttable_to_xls');
       var wb = XLSX.utils.table_to_book(elt, { sheet: "sheet1" });
       return dl ?
         XLSX.write(wb, { bookType: type, bookSST: true, type: 'base64' }):
         XLSX.writeFile(wb, fn || ('Product.' + (type || 'xlsx')));
    }

</script>